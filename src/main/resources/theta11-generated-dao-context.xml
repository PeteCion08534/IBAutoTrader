<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
      http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
      http://www.springframework.org/schema/tx
      http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context-2.5.xsd
      http://www.springframework.org/schema/jee
      http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
      http://www.springframework.org/schema/security 
      http://www.springframework.org/schema/security/spring-security-2.0.1.xsd">



	
	<!-- ******************************************************************** -->
	<!-- This context file was generated and is not intended to be changed manually. -->
	<!-- ******************************************************************** -->
	
	<!-- ******************************************************************** -->
	<!-- Scan for dao layer annotated beans -->
	<!-- ******************************************************************** -->
	<context:component-scan base-package="com.theta.dao" scoped-proxy="interfaces" />
	
	<!-- ******************************************************************** -->
	<!-- Mark bean transactions as annotation driven -->
	<!-- ******************************************************************** -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- ******************************************************************** -->
	<!-- PropertyConfigurer for the DAO -->
	<!-- ******************************************************************** -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:theta11-dao.properties" />
	</bean>		
	
	<!-- ******************************************************************** -->
	<!-- Setup the transaction manager -->
	<!-- ******************************************************************** -->
		<!-- Using Atomikos Transaction Manager -->
		<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
			destroy-method="close">
			<property name="forceShutdown" value="true" />
			<property name="startupTransactionService" value="true" />
			<property name="transactionTimeout" value="60" />
		</bean>
		
		<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" />
		
		<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
		<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
			<property name="transactionManager" ref="atomikosTransactionManager" />
			<property name="userTransaction" ref="atomikosUserTransaction" />
			<property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
		</bean>
	
 	<!-- ******************************************************************** -->
	<!-- Setup a data source -->
	<!-- ******************************************************************** -->


	
	
				<!-- Using Apache DBCP Data Sources -->
				<bean name="LocOracleThetaDS" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
					<property name="driverClassName" value="${LocOracleTheta.connection.driver_class}" />
					<property name="username" value="${LocOracleTheta.connection.username}" />
					<property name="password" value="${LocOracleTheta.connection.password}" />
					<property name="url" value="${LocOracleTheta.connection.url}" />
					<property name="maxIdle" value="${LocOracleTheta.minPoolSize}" />
					<property name="maxActive" value="${LocOracleTheta.maxPoolSize}" />
				</bean>
		
	
	
	<!-- ******************************************************************** -->
	<!-- Setup each persistence unit -->
	<!-- ******************************************************************** -->


	
				<!-- Configure a JPA vendor adapter -->
				<bean id="LocOracleThetaJPAVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
					<property name="showSql" value="${LocOracleTheta.show_sql}" />
					<property name="generateDdl" value="${LocOracleTheta.generateDdl}" />
					<property name="databasePlatform" value="${LocOracleTheta.dialect}" />
				</bean>
				<!-- EntityManager Factory that brings together the persistence unit, datasource, and JPA Vendor -->
				<bean id="LocOracleTheta" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
					<property name="dataSource" ref="LocOracleThetaDS" />
					<property name="persistenceUnitName" value="LocOracleTheta" />
					<property name="jpaVendorAdapter" ref="LocOracleThetaJPAVendorAdapter" />
						<property name="jpaPropertyMap">
							<map>
										<entry key="hibernate.transaction.manager_lookup_class" value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup" />
										<entry key="hibernate.connection.release_mode" value="on_close" />
							</map>
						</property>
				</bean>
	
		
		
</beans>
